wait();
script:destroy();
local Player=owner or game:service'Players':findFirstChild'Diitto'or game:service'Players':findFirstChild'YOURNAMEHERE';--gsub
if(not Player or not Player:findFirstChild'PlayerGui')then error'User does not exist or lacks a PlayerGui.';end;
local Key='';--DO NOT PUT THE SALT HERE.
local InitialSite='https://code.stypi.com/raw/%s';--You encrypt the dropbox id, then the thing name(like uwdubawdiawudaw/asd.lua) 
--https://www.dropbox.com/s/%s?dl=1
--You can easily migrate to https://code.stypi.com/raw/%s and http://www.pastebin.com/raw.php?i=
local Decrypt;--Credits to noliCAIKS.
if(Player.PlayerGui:findFirstChild'\5\6K\5F\127R\5\127')then error'Script already running. Cancelling...';return;end;
local MF=Instance.new('TextBox',Instance.new('ScreenGui',Player.PlayerGui));
MF.Parent.Name='\5\6K\5F\127R\5\127';
MF.Name='MFG';
MF.BackgroundColor3=Color3.new(.196,.196,.196);
MF.BackgroundTransparency=.6;
MF.BorderColor3=Color3.new(.039,.039,.039);
MF.BorderSizePixel=2;
MF.Position=UDim2.new(.7,0,.8);
MF.Size=UDim2.new(.25,0,.05);
MF.ZIndex=10;
MF.FontSize='Size12';
MF.Text='Type your key, ending with !, here...';
MF.TextColor3=Color3.new(1,1,1);
MF.TextWrapped=true;
MF.TextStrokeTransparency=.9;
MF.TextStrokeColor3=Color3.new(1,1,1);
repeat until coroutine.yield()and MF.Text:match'!$';
local FP=MF.Parent;
MF.Parent=nil;
MF.Parent=FP;--loike closeFocus() or some sht
print'a';
Key=MF.Text:gsub('!$','',1);
MF.Text='Submitted.';
delay(.5,function()
	MF.Text='';
	MF:tweenSize(UDim2.new(0,0,.05),'Out','Sine');
	wait(1);
	MF:tweenPosition(UDim2.new(1,0,.8),'Out','Sine',.5);
	wait(.5);
	MF.Parent:destroy();
end);
Player.Chatted:connect(function(Message)
	local Arguments={ypcall(function()
		local ServerLink,ClientLink,SharedLink=Message:match'>run%s*(.*)',Message:match'>rls%s(.*)',Message:match'>rlt%s(.*)';
		if(ServerLink)then
			local Data=Decrypt(ServerLink,Key);
			Data=game:service'HttpService':getAsync(InitialSite:format(Data),true);
			NS(Data,workspace);
		end;
		if(ClientLink)then
			local Data=Decrypt(ClientLink,Key);
			Data=game:service'HttpService':getAsync(InitialSite:format(Data),true);
			NLS(Data,Player:findFirstChild'Backpack'or Instance.new('Backpack',Player));
		end;
		if(SharedLink)then
			local String,Link=SharedLink:match'(%w+) (.*)';
			if(not String)then error'Player not found.';end;
			if(not Link)then error'Link not found.';end;
			String=String:gsub('%s','');
			local Data=Decrypt(Link,Key);
			Data=game:service'HttpService':getAsync(InitialSite:format(Data),true);
			for _,DPlayer in next,game:service'Players':players()do
				local Give;
				if(String=='me'and DPlayer==Player)then
					Give=true;
				elseif(String=='all')then
					Give=true;
				elseif(String=='others'and DPlayer~=Player)then
					Give=true;
				elseif(DPlayer.Name:lower():sub(1,#String)==String:lower())then
					Give=true;
				end;
				if(Give)then
					NLS(Data,DPlayer:findFirstChild'Backpack'or Instance.new('Backpack',DPlayer));
				end;
			end;
		end;
	end)};
	if(not Arguments[1])then
		print(Arguments[2]);
	end;
end);
function Decrypt(cipher, key)
	local key_bytes
	if type(key) == "string" then
		key_bytes = {}
		for key_index = 1, #key do
			key_bytes[key_index] = string.byte(key, key_index)
		end
	else
		key_bytes = key
	end
	local cipher_raw_length = #cipher
	local key_length = #key_bytes
	local cipher_bytes = {}
	local cipher_length = 0
	local cipher_bytes_index = 1
	for byte_str in string.gmatch(cipher, "%x%x") do
		cipher_length = cipher_length + 1
		cipher_bytes[cipher_length] = tonumber(byte_str, 16)
	end
	local random_bytes = {}
	local random_seed = 0
	for key_index = 1, key_length do
		random_seed = (random_seed + key_bytes[key_index] * key_index) * 1103515245 + 12345
		random_seed = (random_seed - random_seed % 65536) / 65536
	end
	for random_index = 1, (cipher_length - key_length + 1) * key_length do
		random_seed = (random_seed * 1103515245 + 12345) % 4294967296
		random_bytes[random_index] = (random_seed - random_seed % 65536) / 65536 % 256
	end
	local random_index = #random_bytes
	local last_key_byte = key_bytes[key_length]
	local result_bytes = {}
	for cipher_index = cipher_length, key_length, -1 do
		local result_byte = cipher_bytes[cipher_index] - last_key_byte
		if result_byte < 0 then
			result_byte = result_byte + 256
		end
		result_byte = result_byte - random_bytes[random_index]
		random_index = random_index - 1
		if result_byte < 0 then
			result_byte = result_byte + 256
		end
		for key_index = key_length - 1, 1, -1 do
			cipher_index = cipher_index - 1
			local cipher_byte = cipher_bytes[cipher_index] - key_bytes[key_index]
			if cipher_byte < 0 then
				cipher_byte = cipher_byte + 256
			end
			cipher_byte = cipher_byte - result_byte
			if cipher_byte < 0 then
				cipher_byte = cipher_byte + 256
			end
			cipher_byte = cipher_byte - random_bytes[random_index]
			random_index = random_index - 1
			if cipher_byte < 0 then
				cipher_byte = cipher_byte + 256
			end
			cipher_bytes[cipher_index] = cipher_byte
		end
		result_bytes[cipher_index] = result_byte
	end
	local result_characters = {}
	for result_index = 1, #result_bytes do
		result_characters[result_index] = string.char(result_bytes[result_index])
	end
	return table.concat(result_characters)
end
